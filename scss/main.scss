$boardSize: 8;
$cellSize: 9vh;
$clr-brown: #b92222;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Inter', sans-serif;
}

body {
    height: 100vh;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #1E1E1E;

    main {
        width: fit-content;
        display: grid;
        grid-template-columns: 1fr min-content min-content 1fr;
        grid-template-rows: min-content min-content;
        grid-template-areas: 
            'instructions instructions instructions instructions'
            'score1 board board score2';
        justify-items: center;
        align-items: center;

        @media screen and (orientation: portrait) {
            grid-template-areas: 
            'score1 instructions instructions score2'
            'board board board board';
            row-gap: 3rem;   
        }
    }
}

.instructions {
    display: grid;
    white-space: nowrap;
    grid-area: instructions;
    color: white;
    font-size: 2rem;
    font-weight: 500;
    margin-bottom: 10vh;

    @media screen and (orientation: portrait) {
        margin-bottom: 0;          
    }

    > * {
        grid-column: 1;
        grid-row: 1;
        opacity: 0;
    }

    &.light-turn .light-turn {
        opacity: 1;
    }

    &.brown-turn .brown-turn {
        opacity: 1;
    }

    &.light-win .light-win {
        opacity: 1;
    }

    &.brown-win .brown-win {
        opacity: 1;
    }
}

.score {
    height: $cellSize;
    width: $cellSize;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    font-weight: 500;
    border-radius: 50%;
    scale: 0.85;

    &.light-score {
        background-size: cover;
        background-color: rgba(222, 184, 135, 1);
        grid-area: score1;
        margin-right: 10vh;
    }

    &.brown-score {
        color: white;
        background-color: $clr-brown;
        grid-area: score2;
        margin-left: 10vh;
    }
}

.checkboard {
    display: grid;
    grid-template-columns: repeat($boardSize, min-content);
    grid-template-rows: repeat($boardSize, min-content);
    grid-area: board;

    .tile {
        height: $cellSize;
        width: $cellSize;
        display: grid;
        justify-items: center;
        align-items: center;
        background-color: rgb(245, 238, 220);

        &.black {
            background-color: black;
        }

        > * {
            box-sizing: content-box;
            position: relative;
            height: 80%;
            width: 80%;
            border-radius: 50%;
            grid-column: 1;
            grid-row: 1;
            animation-duration: 400ms;
            animation-timing-function: ease-out;
        }

        .light-piece {
            background-color: rgba(222, 184, 135, 0);
        }

        .brown-piece {
            background-color: rgba($clr-brown, 0);
        }

        &.light .light-piece {
            background-color: rgba(222, 184, 135, 1);
        }

        &.preview-light .light-piece {
            background-color: rgba(222, 184, 135, 0.5);
        }

        &.light-queen .light-piece {
            background-color: rgba(222, 184, 135, 1);

            &::before {
                content: '';
                position: absolute;
                height: 100%;
                width: 100%;
                background-image: url(../src/img/crown.png);
                background-size: contain;
                filter: brightness(80%);
                scale: 0.7;
            }
        }

        &.brown .brown-piece {
            background-color: rgba($clr-brown, 1);
        }

        &.preview-brown .brown-piece {
            background-color: rgba($clr-brown, 0.6);
        }

        &.brown-queen .brown-piece {
            background-color: rgba($clr-brown, 1);

            &::before {
                content: '';
                position: absolute;
                height: 100%;
                width: 100%;
                background-image: url(../src/img/crown.png);
                background-size: contain;
                opacity: 0.4;
                scale: 0.7;
            }
        }

        &.light.pointer, 
        &.brown.pointer, 
        &.preview-light:hover, 
        &.preview-brown:hover, 
        &.light-queen.pointer:hover, 
        &.brown-queen.pointer:hover {
            > * {
                cursor: pointer;
            }
        }

        &.light.pointer .light-piece, 
        &.brown.pointer .brown-piece, 
        &.preview-light:hover .light-piece, 
        &.light-queen.pointer:hover .light-piece, 
        &.preview-brown:hover .brown-piece, 
        &.brown-queen.pointer:hover .brown-piece {
            border: 4px green solid;
        }
    }
}

@keyframes UL1 {
    from {translate: 0 0;}
    to {translate: #{-$cellSize} #{-$cellSize}}
}

@keyframes UR1 {
    from {translate: 0 0;}
    to {translate: #{$cellSize} #{-$cellSize}}
}

@keyframes UL2 {
    from {translate: 0 0;}
    to {translate: #{-2 * $cellSize} #{-2 * $cellSize}}
}

@keyframes UR2 {
    from {translate: 0 0;}
    to {translate: #{2 * $cellSize} #{-2 * $cellSize}}
}

@keyframes DR1 {
    from {translate: 0 0;}
    to {translate: #{$cellSize} #{$cellSize}}
}

@keyframes DL1 {
    from {translate: 0 0;}
    to {translate: #{-$cellSize} #{$cellSize}}
}

@keyframes DR2 {
    from {translate: 0 0;}
    to {translate: #{2 * $cellSize} #{2 * $cellSize}}
}

@keyframes DL2 {
    from {translate: 0 0;}
    to {translate: #{-2 * $cellSize} #{2 * $cellSize}}
}

@keyframes capture {
    0% {opacity: 1;}
    70% {opacity: 1;}
    90% {opacity: 0;}
    100% {opacity: 0;}
}